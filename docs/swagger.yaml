basePath: /api
definitions:
  domain.CreatePersonRequest:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  domain.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  domain.PaginationMeta:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_items:
        type: integer
    type: object
  domain.Person:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      gender:
        enum:
        - male
        - female
        - other
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        maxLength: 100
        minLength: 2
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  domain.PersonListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Person'
        type: array
      meta:
        $ref: '#/definitions/domain.PaginationMeta'
    type: object
  domain.UpdatePersonRequest:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for managing persons with data enrichment from external APIs
  title: Person Service API
  version: "1.0"
paths:
  /people:
    get:
      description: Retrieves a list of persons with optional filters and pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by surname
        in: query
        name: surname
        type: string
      - description: Filter by age
        in: query
        name: age
        type: integer
      - description: Filter by gender
        in: query
        name: gender
        type: string
      - description: Filter by nationality
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PersonListResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Get all persons
      tags:
      - persons
  /person:
    post:
      consumes:
      - application/json
      description: Creates a person with enriched age, gender, and nationality from
        external APIs
      parameters:
      - description: Person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/domain.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Create a new person
      tags:
      - persons
  /person/{id}:
    delete:
      description: Deletes a person by their ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Person not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Delete a person
      tags:
      - persons
    get:
      description: Retrieves a person by their unique ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Person not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Get a person by ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Updates a person's details by their ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Invalid request body or ID
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Person not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Update a person
      tags:
      - persons
swagger: "2.0"
